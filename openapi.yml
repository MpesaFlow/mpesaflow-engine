openapi: 3.0.0
info:
  title: MpesaFlow API
  version: 1.0.0
  description: API for managing MpesaFlow transactions, applications, and API keys

servers:
  - url: https://api.mpesaflow.com
    description: Production server
  - url: https://sandbox-api.mpesaflow.com
    description: Sandbox server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string

    Application:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string

    ApiKey:
      type: object
      properties:
        id:
          type: string
        keyName:
          type: string
        applicationId:
          type: string

    Transaction:
      type: object
      properties:
        transactionId:
          type: string
        amount:
          type: number
        phoneNumber:
          type: string
        accountReference:
          type: string
        transactionDesc:
          type: string
        mpesaRequestId:
          type: string
        status:
          type: string
          enum: [pending, completed, failed]
        resultDesc:
          type: string
        date_created:
          type: string
          format: date-time

paths:
  /apps/create:
    post:
      summary: Create a new application
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Application created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  applicationId:
                    type: string
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /apps/list:
    get:
      summary: List all applications
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /apps/{appId}:
    delete:
      summary: Delete an application
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: appId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Application deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api-keys/create:
    post:
      summary: Create a new API key
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                applicationId:
                  type: string
                keyName:
                  type: string
      responses:
        '201':
          description: API key created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  apiKey:
                    type: string
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api-keys/list:
    get:
      summary: List all API keys
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of API keys
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiKey'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api-keys/{keyId}:
    delete:
      summary: Revoke an API key
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: keyId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: API key revoked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /transactions/paybill:
    post:
      summary: Initiate a paybill transaction
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                phoneNumber:
                  type: string
                accountReference:
                  type: string
                transactionDesc:
                  type: string
      responses:
        '200':
          description: Transaction processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  mpesaRequestId:
                    type: string
                  mpesaStatus:
                    type: object
        '202':
          description: Transaction is still being processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                  mpesaRequestId:
                    type: string
                  status:
                    type: string
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /transactions/status/{transactionId}:
    get:
      summary: Get transaction status
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: transactionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /transactions/list:
    get:
      summary: List all transactions
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /health:
    get:
      summary: Health check endpoint
      responses:
        '200':
          description: API is healthy
          content:
            text/plain:
              schema:
                type: string
                example: OK

components:
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'