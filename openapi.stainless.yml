# yaml-language-server: $schema=https://app.stainlessapi.com/config.schema.json

organization:
  # Name of your organization or company, used to determine the name of the client
  # and headings.
  name: mpesaflow
  docs: https://docs.mpesaflow.com
  contact: support@mpesaflow.com

# `targets` define the output targets and their customization options, such as
# whether to emit the Node SDK and what it's package name should be.
targets:
  node:
    package_name: mpesaflow
    production_repo: null
    publish:
      npm: true
  python:
    package_name: mpesaflow
    production_repo: null
    publish:
      pypi: true

# `client_settings` define settings for the API client, such as extra constructor
# arguments (used for authentication), retry behavior, idempotency, etc.
client_settings:
  opts:
    bearer_token:
      type: string
      description: Bearer token used for authentication
      nullable: false
      read_env: BEARER_TOKEN
      auth:
        security_scheme: BearerAuth
        role: value

# `environments` are a map of the name of the environment (e.g. "sandbox",
# "production") to the corresponding url to use.
environments:
  production: https://api.mpesaflow.com
  sandbox: https://sandbox-api.mpesaflow.com

# `pagination` defines [pagination schemes] which provides a template to match
# endpoints and generate next-page and auto-pagination helpers in the SDKs.
pagination:
  - name: my_cursor_id_page
    type: cursor_id
    request:
      starting_after:
        type: string
        x-stainless-pagination-property:
          purpose: next_cursor_id_param
      ending_before:
        type: string
        x-stainless-pagination-property:
          purpose: previous_cursor_id_param
      limit:
        type: integer
    response:
      my_data:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              x-stainless-pagination-property:
                purpose: cursor_item_id
          required:
            - id

# `resources` define the structure and organziation for your API, such as how
# methods and models are grouped together and accessed. See the [configuration
# guide] for more information.
#
# [configuration guide]:
#   https://app.stainlessapi.com/docs/guides/configure#resources
resources:
  apps:
    # Configure the methods defined in this resource. Each key in the object is the
    # name of the method and the value is either an endpoint (for example, `get /foo`)
    # or an object with more detail.
    #
    # [reference]: https://app.stainlessapi.com/docs/reference/config#method
    # Configure the models--named types--defined in the resource. Each key in the
    # object is the name of the model and the value is either the name of a schema in
    # `#/components/schemas` or an object with more detail.
    #
    # [reference]: https://app.stainlessapi.com/docs/reference/config#model
    models:
      application: Application
    methods:
      create: post /apps/create
      list:
        endpoint: get /apps/list
        paginated: my_cursor_id_page
      delete: delete /apps/{appId}
    # Subresources define resources that are nested within another for more powerful
    # logical groupings, e.g. `cards.payments`.
    subresources:
      api_keys:
        methods:
          create: post /apps/{appId}/api-keys/create
          list:
            endpoint: get /apps/{appId}/api-keys/list
            paginated: my_cursor_id_page  # Use this if the endpoint supports pagination
            # paginated: false  # Use this if the endpoint does not support pagination
          delete: delete /apps/{appId}/api-keys/{apiKeyId}

  transactions:
    models:
      transaction: Transaction
    methods:
      create: post /transactions/create
      list:
        endpoint: get /transactions/list
        paginated: my_cursor_id_page
      retrieve: get /transactions/{transactionId}

  $client:
    methods:
      health: get /health

settings:
  license: Apache-2.0

# `readme` is used to configure the code snippets that will be rendered in the
# README.md of various SDKs. In particular, you can change the `headline`
# snippet's endpoint and the arguments to call it with.
readme:
  example_requests:
    default:
      type: request
      endpoint: post /apps/create
      params: &ref_0 {}
    headline:
      type: request
      endpoint: post /apps/create
      params: *ref_0
    pagination:
      type: request
      endpoint: get /apps/list
      params: {}
